/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode* head){
        int count = 0;
        ListNode *temp = head;
        while (temp != NULL)
        {
            count++;
            temp = temp->next;
        }
        return count;
    }
    ListNode* rotateRight(ListNode* head, int k) {
        if(head==NULL) return 0;
        int n = length(head);
        int b = k % n;
        if(b==0) return head;
            int ind = n - b;
            ListNode *temp = head;

            while (ind != 1)
            {
                temp = temp->next;
                ind--;
            }
            ListNode *newNode = temp->next;
            ListNode *first = newNode;
            temp->next = NULL;

            while (newNode->next != NULL)
            {
                newNode = newNode->next;
            }
            newNode->next = head;
            head=first;
        return head;
    }
};
